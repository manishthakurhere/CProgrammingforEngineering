<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".StaticMemoryAllotment"
    android:background="#6495ed">

    <TextView
        android:id="@+id/textView102"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        android:background="#b0e0e6"
        android:text="Following is a simple example of static memory allocation."
        android:textColor="#000000"
        android:textSize="22sp"
        app:layout_constraintTop_toBottomOf="@+id/textView106"
        tools:layout_editor_absoluteX="33dp" />

    <TextView
        android:id="@+id/textView106"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="15dp"
        android:background="#b0e0e6"
        android:text="When a variable is simply declared ,memory is said to be allocated statically by the compiler.\n\nThe memory is allocated during compile time\n\nThe address can be obtained by using ‘address of’ operator and can be assigned to a pointer."
        android:textColor="#000000"
        android:textSize="22sp"
        app:layout_constraintTop_toTopOf="parent"
        tools:layout_editor_absoluteX="0dp" />

    <ImageView
        android:id="@+id/imageView31"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="15dp"
        app:layout_constraintTop_toBottomOf="@+id/textView102"
        app:srcCompat="@drawable/sma"
        tools:layout_editor_absoluteX="141dp" />
</androidx.constraintlayout.widget.ConstraintLayout>